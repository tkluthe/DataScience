<?xml version="1.0"?>
<project name="Ant-Test" default="main" basedir="..">
  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->
  
<macrodef name="quiet">
    <element name="body" implicit="yes"/>
    <sequential>
        <script language="javascript">
            project.getBuildListeners().firstElement().setMessageOutputLevel(0);
        </script>
        <body/>
        <script language="javascript">
            // TODO: restore last log level
            project.getBuildListeners().firstElement().setMessageOutputLevel(2);
        </script>
    </sequential>
</macrodef>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
  <!-- Variables used for JUnit testing -->
  <property name="base" location="tmp/${test.id}/${test.task}" />
  <property name="java.home" location="/usr/lib/jvm/java-8-oracle/" />
  
  <property name="test.report.dir" location="${base}/testreport" />
  <property name="src.dir" location="${base}" />
  <property name="build.dir" location="${base}/bin" />
  <property name="test.dir" location="documents/${test.path}/test" />
  <property name="lib.dir" location="documents/${test.path}/src" />
  <property name="test.maxtime" value="10" />
	
  <!-- Define the classpath which includes the junit.jar and the classes after compiling-->
  <path id="junit.class.path">
    <pathelement location="build/lib/junit.jar" />
    <pathelement location="build/lib/hamcrest-core-1.3.jar" />
    <pathelement location="${build.dir}" />
  </path>

  <path id="junit.formatter">
    <pathelement location="/home/experiment/experiment/workspaces/lib/formatter.jar" />
  </path> 

<!--<path id="jdk.class.path">
<pthelement location="/usr/lib/jvm/java-7-oracle/lib/tools.jar" />
</path> -->

 <!--<property name="build.compiler" 
      value="org.eclipse.jdt.core.JDTCompilerAdapter"/> -->


  <!-- Deletes the existing build, docs and dist directory-->
  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${test.report.dir}" />
  </target>

  <!-- Creates the  build, docs and dist directory-->
  <target name="makedir">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${test.report.dir}" />
  </target>

  <target name="copy">
    <copy todir="${src.dir}">
      <fileset dir="${test.dir}" />
    </copy>
    <copy todir="${src.dir}">
      <fileset dir="${lib.dir}" />
    </copy>
  </target>

  <!-- Compiles the java code (including the usage of library for JUnit -->
  <target name="compile" depends="clean, makedir, copy">
    <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath refid="junit.class.path" />
    </javac>
  </target>

  <!-- Run the JUnit Tests -->
  <!-- Output is XML, could also be plain-->
  <target name="junit" depends="compile">
    <limit seconds="${test.maxtime}" failonerror="true">
      <junit printsummary="on" fork="off" haltonfailure="true" haltonerror="yes">
        <classpath refid="junit.class.path" />
            <classpath refid="junit.formatter" />
            <formatter type="brief" usefile="false" /> 
            <!--- <jvmarg value="-Djava.awt.headless=true" /> -->
  <!--      <formatter classname="de.unidue.test.MsFormatter" usefile="false" />
            -->
  <!--      <formatter type="xml" /> -->
        <batchtest todir="${test.report.dir}">
          <fileset dir="${base}">
            <include name="**/*Test*.java" />
          </fileset>
        </batchtest>
      </junit> 
    </limit>
  </target>

  <target name="main" depends="junit">
    <description>Main target</description>
  </target>

</project> 
